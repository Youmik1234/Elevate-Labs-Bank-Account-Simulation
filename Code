import java.util.ArrayList;
import java.util.Scanner;

class Account {
    private String accountHolder;
    private String accountNumber;
    private double balance;
    private ArrayList<String> transactions;

    // Constructor
    public Account(String accountHolder, String accountNumber, double initialBalance) {
        this.accountHolder = accountHolder;
        this.accountNumber = accountNumber;
        this.balance = initialBalance;
        this.transactions = new ArrayList<>();
        transactions.add("Account created with initial balance: ‚Çπ" + initialBalance);
    }

    // Deposit method
    public void deposit(double amount) {
        if (amount <= 0) {
            System.out.println("‚ùå Deposit amount must be positive!");
            return;
        }
        balance += amount;
        transactions.add("Deposited: ‚Çπ" + amount);
        System.out.println("‚úÖ Successfully deposited ‚Çπ" + amount);
    }

    // Withdraw method
    public void withdraw(double amount) {
        if (amount <= 0) {
            System.out.println("‚ùå Withdrawal amount must be positive!");
            return;
        }
        if (amount > balance) {
            System.out.println("‚ö†Ô∏è Insufficient balance!");
            return;
        }
        balance -= amount;
        transactions.add("Withdrawn: ‚Çπ" + amount);
        System.out.println("‚úÖ Successfully withdrawn ‚Çπ" + amount);
    }

    // Show balance
    public void checkBalance() {
        System.out.println("üí∞ Current balance: ‚Çπ" + balance);
    }

    // Show transaction history
    public void showTransactions() {
        System.out.println("\nüìú Transaction History for Account " + accountNumber + ":");
        for (String t : transactions) {
            System.out.println("- " + t);
        }
    }

    // Get account details
    public void showDetails() {
        System.out.println("\n===== Account Details =====");
        System.out.println("Account Holder: " + accountHolder);
        System.out.println("Account Number: " + accountNumber);
        System.out.println("Current Balance: ‚Çπ" + balance);
    }
}

public class BankAccountSimulation {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Account account = null;

        while (true) {
            System.out.println("\n===== Bank Account Simulation =====");
            System.out.println("1. Create Account");
            System.out.println("2. Deposit");
            System.out.println("3. Withdraw");
            System.out.println("4. Check Balance");
            System.out.println("5. Transaction History");
            System.out.println("6. Account Details");
            System.out.println("7. Exit");
            System.out.print("Enter your choice: ");

            String input = sc.nextLine();
            int choice;

            try {
                choice = Integer.parseInt(input);
            } catch (NumberFormatException e) {
                System.out.println("‚ùå Invalid input! Please enter a number (1‚Äì7).");
                continue;
            }

            switch (choice) {
                case 1 -> {
                    if (account != null) {
                        System.out.println("‚ö†Ô∏è Account already exists!");
                        continue;
                    }
                    System.out.print("Enter Account Holder Name: ");
                    String name = sc.nextLine();
                    System.out.print("Enter Account Number: ");
                    String accNo = sc.nextLine();
                    System.out.print("Enter Initial Balance: ");
                    double balance = Double.parseDouble(sc.nextLine());

                    account = new Account(name, accNo, balance);
                    System.out.println("‚úÖ Account created successfully!");
                }

                case 2 -> {
                    if (account == null) {
                        System.out.println("‚ö†Ô∏è Please create an account first!");
                        continue;
                    }
                    System.out.print("Enter amount to deposit: ");
                    double amount = Double.parseDouble(sc.nextLine());
                    account.deposit(amount);
                }

                case 3 -> {
                    if (account == null) {
                        System.out.println("‚ö†Ô∏è Please create an account first!");
                        continue;
                    }
                    System.out.print("Enter amount to withdraw: ");
                    double amount = Double.parseDouble(sc.nextLine());
                    account.withdraw(amount);
                }

                case 4 -> {
                    if (account == null) {
                        System.out.println("‚ö†Ô∏è Please create an account first!");
                        continue;
                    }
                    account.checkBalance();
                }

                case 5 -> {
                    if (account == null) {
                        System.out.println("‚ö†Ô∏è Please create an account first!");
                        continue;
                    }
                    account.showTransactions();
                }

                case 6 -> {
                    if (account == null) {
                        System.out.println("‚ö†Ô∏è Please create an account first!");
                        continue;
                    }
                    account.showDetails();
                }

                case 7 -> {
                    System.out.println("üëã Exiting... Thank you for using the Bank Account Simulator!");
                    sc.close();
                    return;
                }

                default -> System.out.println("‚ö†Ô∏è Invalid choice! Try again.");
            }
        }
    }
}
